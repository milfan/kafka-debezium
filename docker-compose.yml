version: "3.8"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    hostname: zookeeper
    container_name: zookeeper-1
    platform: linux/arm64
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "2181"]
      interval: 10s
      timeout: 5s
      retries: 5

  broker:
    image: confluentinc/cp-server:7.5.0
    hostname: broker
    container_name: broker  
    platform: linux/arm64
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      # KAFKA_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
      CONFLUENT_METRICS_ENABLE: "true"
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:29092
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: "1"
      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper:2181
      CONFLUENT_SUPPORT_CUSTOMER_ID: anonymous
      KAFKA_AUTO_LEADER_REBALANCE_ENABLE: "true"
      KAFKA_BROKER_ID: "1"
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: "1"
      KAFKA_CONFLUENT_TIER_LOCAL_HOTSET_MS: "259200000"
      KAFKA_CONNECTIONS_MAX_IDLE_MS: "1200000"
      KAFKA_DEFAULT_REPLICATION_FACTOR: "1"
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: "0"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LOG_CLEANER_DELETE_RETENTION_MS: "21600000"
      KAFKA_LOG_RETENTION_BYTES: "524288000"
      KAFKA_LOG_RETENTION_HOURS: "24"
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_MIN_INSYNC_REPLICAS: 1
      KAFKA_NUM_PARTITIONS: 3
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "9092"]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - 8080:8080
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=broker:29092
    depends_on:
      - broker

  sqlserver:
    image: mcr.microsoft.com/mssql/server:2019-latest
    platform: linux/amd64 
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=password123
      - MSSQL_PID=Developer
      - MSSQL_AGENT_ENABLED=true
    ports:
      - 1433:1433
    volumes:
      - ./data:/var/opt/mssql
      - ./init-agent.sh:/usr/src/init-agent.sh
    command: ["/bin/bash", "/usr/src/init-agent.sh"]
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P password123 -Q 'SELECT 1' || exit 1"]
      interval: 10s
      retries: 10
      start_period: 10s
      timeout: 3s

  connect:
    image: debezium/connect:2.7.3.Final
    depends_on:
      - broker
      - sqlserver
    ports:
      - "8083:8083"
    environment:
      BOOTSTRAP_SERVERS: broker:29092
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: my_connect_configs
      OFFSET_STORAGE_TOPIC: my_connect_offsets
      STATUS_STORAGE_TOPIC: my_connect_statuses
      KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      PLUGIN_PATH: /kafka/connect,/debezium/connectors
      DATABASE_HISTORY_KAFKA_TOPIC: inisiasi_data.dbhistory.sqlserver
      DATABASE_HISTORY_KAFKA_BOOTSTRAP_SERVERS: broker:29092

